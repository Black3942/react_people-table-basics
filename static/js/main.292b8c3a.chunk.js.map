{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleTable.tsx","pages/PeoplePage.tsx","components/Navigation.tsx","App.tsx","index.tsx"],"names":["getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","className","PersonLink","person","name","sex","slug","to","classNames","PeopleTable","people","selectedSlug","peopleWithParents","map","mother","find","motherName","father","fatherName","born","died","PeoplePage","useState","setPeople","error","setError","isLoading","setIsLoading","noPeople","setNoPeople","useParams","useEffect","res","length","catch","finally","Navigation","text","isActive","App","role","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.292b8c3a.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: FC<Props> = ({ person }) => {\n  const { name, sex, slug } = person;\n\n  return (\n    <Link\n      to={`../${slug}`}\n      className={classNames({ 'has-text-danger': sex === 'f' })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  people: Person[];\n  selectedSlug: string;\n};\n\nexport const PeopleTable: FC<Props> = ({ people, selectedSlug }) => {\n  const peopleWithParents: Person[] = people.map(person => ({\n    ...person,\n    mother: people.find(mother => mother.name === person.motherName),\n    father: people.find(father => father.name === person.fatherName),\n  }));\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {peopleWithParents.map(person => {\n          const {\n            sex, slug, born, died, mother, father, motherName, fatherName,\n          } = person;\n\n          return (\n            <tr\n              key={slug}\n              data-cy=\"person\"\n              className={classNames(\n                { 'has-background-warning': slug === selectedSlug },\n              )}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n              <td>\n                {mother ? <PersonLink person={mother} /> : motherName || '-'}\n              </td>\n              <td>\n                {father ? <PersonLink person={father} /> : fatherName || '-'}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { FC, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../api';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { Person } from '../types';\n\nexport const PeoplePage: FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [noPeople, setNoPeople] = useState(false);\n  const { slug = '' } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPeople()\n      .then((res) => {\n        if (res.length === 0) {\n          setNoPeople(true);\n        } else {\n          setPeople(res);\n        }\n      })\n      .catch(() => (setError('Something went wrong')))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {error && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              {error}\n            </p>\n          )}\n\n          {noPeople && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people.length > 0 && (\n            <PeopleTable people={people} selectedSlug={slug} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string;\n  text: string;\n};\n\nexport const Navigation: FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    )}\n  >\n    {text}\n  </NavLink>\n);\n","import './App.scss';\nimport { FC } from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { Navigation } from './components/Navigation';\n\nexport const App: FC = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <Navigation to=\"/\" text=\"Home\" />\n          <Navigation to=\"/people\" text=\"People\" />\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route\n            path=\"*\"\n            element={<h1 className=\"title\">Page not found</h1>}\n          />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}